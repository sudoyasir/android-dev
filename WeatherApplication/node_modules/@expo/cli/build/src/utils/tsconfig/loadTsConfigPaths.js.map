{"version":3,"sources":["../../../../src/utils/tsconfig/loadTsConfigPaths.ts"],"sourcesContent":["import JsonFile from '@expo/json-file';\nimport path from 'path';\n\nimport { fileExistsAsync } from '../dir';\nimport { evaluateTsConfig, importTypeScriptFromProjectOptionally } from './evaluateTsConfig';\n\nexport type TsConfigPaths = {\n  paths?: Record<string, string[]>;\n  baseUrl: string;\n};\n\ntype ConfigReadResults = [\n  string,\n  {\n    compilerOptions?: {\n      baseUrl?: string;\n      paths?: Record<string, string[]>;\n    };\n  }\n];\n\nconst debug = require('debug')('expo:utils:tsconfig:load') as typeof console.log;\n\nexport async function loadTsConfigPathsAsync(dir: string): Promise<TsConfigPaths | null> {\n  const options = (await readTsconfigAsync(dir)) ?? (await readJsconfigAsync(dir));\n  if (options) {\n    const [filepath, config] = options;\n    if (config.compilerOptions?.baseUrl) {\n      return {\n        paths: config.compilerOptions?.paths,\n        baseUrl: path.resolve(dir, config.compilerOptions.baseUrl),\n      };\n    }\n    debug(`No baseUrl found in ${filepath}`);\n    return {\n      paths: config.compilerOptions?.paths,\n      baseUrl: dir,\n    };\n  }\n  return null;\n}\n\nasync function readJsconfigAsync(projectRoot: string): Promise<null | ConfigReadResults> {\n  const configPath = path.join(projectRoot, 'jsconfig.json');\n  if (await fileExistsAsync(configPath)) {\n    const config = await JsonFile.readAsync(configPath, { json5: true });\n    if (config) {\n      return [configPath, config];\n    }\n  }\n  return null;\n}\n\n// TODO: Refactor for speed\nexport async function readTsconfigAsync(projectRoot: string): Promise<null | ConfigReadResults> {\n  const configPath = path.join(projectRoot, 'tsconfig.json');\n  if (await fileExistsAsync(configPath)) {\n    // We need to fully evaluate the tsconfig to get the baseUrl and paths in case they were applied in `extends`.\n    const ts = importTypeScriptFromProjectOptionally(projectRoot);\n    if (ts) {\n      return [configPath, evaluateTsConfig(ts, configPath)];\n    }\n    debug(`typescript module not found in: ${projectRoot}`);\n  }\n  return null;\n}\n"],"names":["loadTsConfigPathsAsync","readTsconfigAsync","debug","require","dir","options","readJsconfigAsync","config","filepath","compilerOptions","baseUrl","paths","path","resolve","projectRoot","configPath","join","fileExistsAsync","JsonFile","readAsync","json5","ts","importTypeScriptFromProjectOptionally","evaluateTsConfig"],"mappings":"AAAA;;;;QAuBsBA,sBAAsB,GAAtBA,sBAAsB;QA+BtBC,iBAAiB,GAAjBA,iBAAiB;AAtDlB,IAAA,SAAiB,kCAAjB,iBAAiB,EAAA;AACrB,IAAA,KAAM,kCAAN,MAAM,EAAA;AAES,IAAA,IAAQ,WAAR,QAAQ,CAAA;AACgC,IAAA,iBAAoB,WAApB,oBAAoB,CAAA;;;;;;AAiB5F,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,0BAA0B,CAAC,AAAsB,AAAC;AAE1E,eAAeH,sBAAsB,CAACI,GAAW,EAAiC;QACvE,GAA8B;IAA9C,MAAMC,OAAO,GAAG,CAAA,GAA8B,GAA7B,MAAMJ,iBAAiB,CAACG,GAAG,CAAC,YAA7B,GAA8B,GAAK,MAAME,iBAAiB,CAACF,GAAG,CAAC,AAAC,AAAC;IACjF,IAAIC,OAAO,EAAE;YAEPE,IAAsB,EAQjBA,IAAsB;QAT/B,MAAM,CAACC,QAAQ,EAAED,MAAM,CAAC,GAAGF,OAAO,AAAC;QACnC,IAAIE,CAAAA,IAAsB,GAAtBA,MAAM,CAACE,eAAe,SAAS,GAA/BF,KAAAA,CAA+B,GAA/BA,IAAsB,CAAEG,OAAO,EAAE;gBAE1BH,IAAsB;YAD/B,OAAO;gBACLI,KAAK,EAAEJ,CAAAA,IAAsB,GAAtBA,MAAM,CAACE,eAAe,SAAO,GAA7BF,KAAAA,CAA6B,GAA7BA,IAAsB,CAAEI,KAAK;gBACpCD,OAAO,EAAEE,KAAI,QAAA,CAACC,OAAO,CAACT,GAAG,EAAEG,MAAM,CAACE,eAAe,CAACC,OAAO,CAAC;aAC3D,CAAC;SACH;QACDR,KAAK,CAAC,CAAC,oBAAoB,EAAEM,QAAQ,CAAC,CAAC,CAAC,CAAC;QACzC,OAAO;YACLG,KAAK,EAAEJ,CAAAA,IAAsB,GAAtBA,MAAM,CAACE,eAAe,SAAO,GAA7BF,KAAAA,CAA6B,GAA7BA,IAAsB,CAAEI,KAAK;YACpCD,OAAO,EAAEN,GAAG;SACb,CAAC;KACH;IACD,OAAO,IAAI,CAAC;CACb;AAED,eAAeE,iBAAiB,CAACQ,WAAmB,EAAqC;IACvF,MAAMC,UAAU,GAAGH,KAAI,QAAA,CAACI,IAAI,CAACF,WAAW,EAAE,eAAe,CAAC,AAAC;IAC3D,IAAI,MAAMG,CAAAA,GAAAA,IAAe,AAAY,CAAA,gBAAZ,CAACF,UAAU,CAAC,EAAE;QACrC,MAAMR,MAAM,GAAG,MAAMW,SAAQ,QAAA,CAACC,SAAS,CAACJ,UAAU,EAAE;YAAEK,KAAK,EAAE,IAAI;SAAE,CAAC,AAAC;QACrE,IAAIb,MAAM,EAAE;YACV,OAAO;gBAACQ,UAAU;gBAAER,MAAM;aAAC,CAAC;SAC7B;KACF;IACD,OAAO,IAAI,CAAC;CACb;AAGM,eAAeN,iBAAiB,CAACa,WAAmB,EAAqC;IAC9F,MAAMC,UAAU,GAAGH,KAAI,QAAA,CAACI,IAAI,CAACF,WAAW,EAAE,eAAe,CAAC,AAAC;IAC3D,IAAI,MAAMG,CAAAA,GAAAA,IAAe,AAAY,CAAA,gBAAZ,CAACF,UAAU,CAAC,EAAE;QACrC,8GAA8G;QAC9G,MAAMM,EAAE,GAAGC,CAAAA,GAAAA,iBAAqC,AAAa,CAAA,sCAAb,CAACR,WAAW,CAAC,AAAC;QAC9D,IAAIO,EAAE,EAAE;YACN,OAAO;gBAACN,UAAU;gBAAEQ,CAAAA,GAAAA,iBAAgB,AAAgB,CAAA,iBAAhB,CAACF,EAAE,EAAEN,UAAU,CAAC;aAAC,CAAC;SACvD;QACDb,KAAK,CAAC,CAAC,gCAAgC,EAAEY,WAAW,CAAC,CAAC,CAAC,CAAC;KACzD;IACD,OAAO,IAAI,CAAC;CACb"}