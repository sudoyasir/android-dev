{"version":3,"sources":["../../../../../src/start/server/metro/externals.ts"],"sourcesContent":["/**\n * Copyright Â© 2023 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport fs from 'fs';\nimport { builtinModules } from 'module';\nimport path from 'path';\n\n// A list of the Node.js standard library modules that are currently\n// available,\nexport const NODE_STDLIB_MODULES: string[] = [\n  'fs/promises',\n  ...(\n    builtinModules ||\n    // @ts-expect-error\n    (process.binding ? Object.keys(process.binding('natives')) : []) ||\n    []\n  ).filter((x) => !/^_|^(internal|v8|node-inspect)\\/|\\//.test(x) && !['sys'].includes(x)),\n].sort();\n\nexport const EXTERNAL_REQUIRE_POLYFILL = '.expo/metro/polyfill.js';\nexport const EXTERNAL_REQUIRE_NATIVE_POLYFILL = '.expo/metro/polyfill.native.js';\nexport const METRO_EXTERNALS_FOLDER = '.expo/metro/externals';\n\nexport function getNodeExternalModuleId(fromModule: string, moduleId: string) {\n  return path.relative(\n    path.dirname(fromModule),\n    path.join(METRO_EXTERNALS_FOLDER, moduleId, 'index.js')\n  );\n}\n\nexport async function setupNodeExternals(projectRoot: string) {\n  await tapExternalRequirePolyfill(projectRoot);\n  await tapNodeShims(projectRoot);\n}\n\nasync function tapExternalRequirePolyfill(projectRoot: string) {\n  await fs.promises.mkdir(path.join(projectRoot, path.dirname(EXTERNAL_REQUIRE_POLYFILL)), {\n    recursive: true,\n  });\n  await fs.promises.writeFile(\n    path.join(projectRoot, EXTERNAL_REQUIRE_POLYFILL),\n    'global.$$require_external = typeof window === \"undefined\" ? require : () => null;'\n  );\n  await fs.promises.writeFile(\n    path.join(projectRoot, EXTERNAL_REQUIRE_NATIVE_POLYFILL),\n    'global.$$require_external = (moduleId) => {throw new Error(`Node.js standard library module ${moduleId} is not available in this JavaScript environment`);}'\n  );\n}\n\nexport function isNodeExternal(moduleName: string): string | null {\n  const moduleId = moduleName.replace(/^node:/, '');\n  if (NODE_STDLIB_MODULES.includes(moduleId)) {\n    return moduleId;\n  }\n  return null;\n}\n\nfunction tapNodeShimContents(moduleId: string): string {\n  return `module.exports = $$require_external('node:${moduleId}');`;\n}\n\n// Ensure Node.js shims which require using `$$require_external` are available inside the project.\nasync function tapNodeShims(projectRoot: string) {\n  const externals: Record<string, string> = {};\n  for (const moduleId of NODE_STDLIB_MODULES) {\n    const shimDir = path.join(projectRoot, METRO_EXTERNALS_FOLDER, moduleId);\n    const shimPath = path.join(shimDir, 'index.js');\n    externals[moduleId] = shimPath;\n\n    if (!fs.existsSync(shimPath)) {\n      await fs.promises.mkdir(shimDir, { recursive: true });\n      await fs.promises.writeFile(shimPath, tapNodeShimContents(moduleId));\n    }\n  }\n}\n"],"names":["getNodeExternalModuleId","setupNodeExternals","isNodeExternal","NODE_STDLIB_MODULES","builtinModules","process","binding","Object","keys","filter","x","test","includes","sort","EXTERNAL_REQUIRE_POLYFILL","EXTERNAL_REQUIRE_NATIVE_POLYFILL","METRO_EXTERNALS_FOLDER","fromModule","moduleId","path","relative","dirname","join","projectRoot","tapExternalRequirePolyfill","tapNodeShims","fs","promises","mkdir","recursive","writeFile","moduleName","replace","tapNodeShimContents","externals","shimDir","shimPath","existsSync"],"mappings":"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"}