{"version":3,"sources":["../../../../../../../src/start/server/metro/inspector-proxy/handlers/VscodeDebuggerScriptParsed.ts"],"sourcesContent":["import Protocol from 'devtools-protocol';\nimport { Device as MetroDevice } from 'metro-inspector-proxy';\n\nimport { ExpoDebuggerInfo } from '../device';\nimport { CdpMessage, DeviceRequest, InspectorHandler } from './types';\n\n/** Android's stock emulator and other emulators such as genymotion use a standard localhost alias. */\nconst EMULATOR_LOCALHOST_ADDRESSES: Readonly<string[]> = ['10.0.2.2', '10.0.3.2'];\n/** Prefix for script URLs that are alphanumeric IDs. */\nconst FILE_PREFIX = 'file://';\n\n/**\n * Some debug clients does not support fetching source maps by URL.\n * By default, the `metro-inspector-proxy` inlines the source map as base64 string.\n * Unfortunately, that causes a multi-second delay in VS Code (Â±5s).\n * This handler disables inlining the source maps for VS Code only.\n */\nexport class VscodeDebuggerScriptParsedHandler implements InspectorHandler {\n  constructor(private readonly device: MetroDevice) {}\n\n  onDeviceMessage(message: DeviceRequest<DebuggerScriptParsed>, debuggerInfo: ExpoDebuggerInfo) {\n    if (debuggerInfo.debuggerType !== 'vscode' || message.method !== 'Debugger.scriptParsed') {\n      return false;\n    }\n\n    // See: https://github.com/facebook/metro/blob/f43caa371a813b257cb0b42028079645a1e85e0e/packages/metro-inspector-proxy/src/Device.js#L401-L410\n    if (message.params.sourceMapURL) {\n      for (let i = 0; i < EMULATOR_LOCALHOST_ADDRESSES.length; ++i) {\n        const address = EMULATOR_LOCALHOST_ADDRESSES[i];\n        if (message.params.sourceMapURL.indexOf(address) >= 0) {\n          message.params.sourceMapURL = message.params.sourceMapURL.replace(address, 'localhost');\n          debuggerInfo.originalSourceURLAddress = address;\n        }\n      }\n    }\n\n    // See: https://github.com/facebook/metro/blob/f43caa371a813b257cb0b42028079645a1e85e0e/packages/metro-inspector-proxy/src/Device.js#L431-L453\n    if (message.params.url) {\n      for (let i = 0; i < EMULATOR_LOCALHOST_ADDRESSES.length; ++i) {\n        const address = EMULATOR_LOCALHOST_ADDRESSES[i];\n        if (message.params.url.indexOf(address) >= 0) {\n          message.params.url = message.params.url.replace(address, 'localhost');\n          debuggerInfo.originalSourceURLAddress = address;\n        }\n      }\n\n      // Chrome doesn't download source maps if URL param is not a valid\n      // URL. Some frameworks pass alphanumeric script ID instead of URL which causes\n      // Chrome to not download source maps. In this case we want to prepend script ID\n      // with 'file://' prefix.\n      if (message.params.url.match(/^[0-9a-z]+$/)) {\n        message.params.url = FILE_PREFIX + message.params.url;\n        debuggerInfo.prependedFilePrefix = true;\n      }\n\n      if (message.params.scriptId != null) {\n        this.device._scriptIdToSourcePathMapping.set(message.params.scriptId, message.params.url);\n      }\n    }\n\n    // Block `metro-inspector-proxy`'s default source map inlining\n    return true;\n  }\n}\n\n/** @see https://chromedevtools.github.io/devtools-protocol/v8/Debugger/#event-scriptParsed */\nexport type DebuggerScriptParsed = CdpMessage<\n  'Debugger.scriptParsed',\n  Protocol.Debugger.ScriptParsedEvent,\n  never\n>;\n"],"names":["EMULATOR_LOCALHOST_ADDRESSES","FILE_PREFIX","VscodeDebuggerScriptParsedHandler","constructor","device","onDeviceMessage","message","debuggerInfo","debuggerType","method","params","sourceMapURL","i","length","address","indexOf","replace","originalSourceURLAddress","url","match","prependedFilePrefix","scriptId","_scriptIdToSourcePathMapping","set"],"mappings":"AAAA;;;;AAMA,sGAAsG,CACtG,MAAMA,4BAA4B,GAAuB;IAAC,UAAU;IAAE,UAAU;CAAC,AAAC;AAClF,wDAAwD,CACxD,MAAMC,WAAW,GAAG,SAAS,AAAC;AAQvB,MAAMC,iCAAiC;IAC5CC,YAA6BC,MAAmB,CAAE;aAArBA,MAAmB,GAAnBA,MAAmB;KAAI;IAEpDC,eAAe,CAACC,OAA4C,EAAEC,YAA8B,EAAE;QAC5F,IAAIA,YAAY,CAACC,YAAY,KAAK,QAAQ,IAAIF,OAAO,CAACG,MAAM,KAAK,uBAAuB,EAAE;YACxF,OAAO,KAAK,CAAC;SACd;QAED,8IAA8I;QAC9I,IAAIH,OAAO,CAACI,MAAM,CAACC,YAAY,EAAE;YAC/B,IAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,4BAA4B,CAACa,MAAM,EAAE,EAAED,CAAC,CAAE;gBAC5D,MAAME,OAAO,GAAGd,4BAA4B,CAACY,CAAC,CAAC,AAAC;gBAChD,IAAIN,OAAO,CAACI,MAAM,CAACC,YAAY,CAACI,OAAO,CAACD,OAAO,CAAC,IAAI,CAAC,EAAE;oBACrDR,OAAO,CAACI,MAAM,CAACC,YAAY,GAAGL,OAAO,CAACI,MAAM,CAACC,YAAY,CAACK,OAAO,CAACF,OAAO,EAAE,WAAW,CAAC,CAAC;oBACxFP,YAAY,CAACU,wBAAwB,GAAGH,OAAO,CAAC;iBACjD;aACF;SACF;QAED,8IAA8I;QAC9I,IAAIR,OAAO,CAACI,MAAM,CAACQ,GAAG,EAAE;YACtB,IAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,4BAA4B,CAACa,MAAM,EAAE,EAAED,CAAC,CAAE;gBAC5D,MAAME,OAAO,GAAGd,4BAA4B,CAACY,CAAC,CAAC,AAAC;gBAChD,IAAIN,OAAO,CAACI,MAAM,CAACQ,GAAG,CAACH,OAAO,CAACD,OAAO,CAAC,IAAI,CAAC,EAAE;oBAC5CR,OAAO,CAACI,MAAM,CAACQ,GAAG,GAAGZ,OAAO,CAACI,MAAM,CAACQ,GAAG,CAACF,OAAO,CAACF,OAAO,EAAE,WAAW,CAAC,CAAC;oBACtEP,YAAY,CAACU,wBAAwB,GAAGH,OAAO,CAAC;iBACjD;aACF;YAED,kEAAkE;YAClE,+EAA+E;YAC/E,gFAAgF;YAChF,yBAAyB;YACzB,IAAIR,OAAO,CAACI,MAAM,CAACQ,GAAG,CAACC,KAAK,eAAe,EAAE;gBAC3Cb,OAAO,CAACI,MAAM,CAACQ,GAAG,GAAGjB,WAAW,GAAGK,OAAO,CAACI,MAAM,CAACQ,GAAG,CAAC;gBACtDX,YAAY,CAACa,mBAAmB,GAAG,IAAI,CAAC;aACzC;YAED,IAAId,OAAO,CAACI,MAAM,CAACW,QAAQ,IAAI,IAAI,EAAE;gBACnC,IAAI,CAACjB,MAAM,CAACkB,4BAA4B,CAACC,GAAG,CAACjB,OAAO,CAACI,MAAM,CAACW,QAAQ,EAAEf,OAAO,CAACI,MAAM,CAACQ,GAAG,CAAC,CAAC;aAC3F;SACF;QAED,8DAA8D;QAC9D,OAAO,IAAI,CAAC;KACb;CACF;QA9CYhB,iCAAiC,GAAjCA,iCAAiC"}